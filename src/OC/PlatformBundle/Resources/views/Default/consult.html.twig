{% extends 'OCPlatformBundle::layout.html.twig'%}

{% set consultPage = true %}

{% block title %}{{ parent() }} - Consultation{% endblock %}

{% block stylesheets %}
    {{ parent() }}

    <link rel="stylesheet" href="{{ asset('chosen/chosen.css')}}">
	<link href="{{ asset('css/nao_consult.css') }}" rel="stylesheet">

{% endblock %}

{% block body %}
    <div class="container bodyContent">
        <div class="row">
           
            <h1 class="titlePage mt-30 mb-50">Consultation des contributions</h1>
            
            <div class="col-lg-4 col-md-4 search mb-20">
                <h2 class="subTitle">Trouver un oiseau</h2><br>
                <p>Choisissez l'oiseau pour lequel vous souhaitez avoir des informations et visualisez sur la carte les zones géographiques dans lesquelles il a été observé par nos contributeurs.</p>
                <p>Vous pouvez sélectionner l'espèce recherchée dans la liste déroulante, ou saisir les premières lettres du nom de cette espèce pour accéder plus rapidement aux résultats correspondants.</p>
                
                {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}
                {{ form_errors(form) }}
                   
                <span class="formErrorMess">{{ form_errors(form.nomVern) }}</span>
                <div class="form-group">
                    <div class="col-sm-12">
                        {{ form_label(form.nomVern, "Espèce recherchée :", {'label_attr': {'class': 'control-label'
                        }}) }}
                        {{ form_widget(form.nomVern, {'attr': {'class': 'chosen-select'
                        }}) }}
                        <small>(NC) : Pas de nom vernaculaire français pour cette espèce.</small>
                    </div>
                </div>

                <div class="container form-group">
                    <button type="submit" class="btn btnNaoGreen">Rechercher</button>
                </div>

                {{ form_rest(form) }}
                {{ form_end(form) }}

                {% if bird is defined %}
                    <hr class="greenHr" />
                    <div>
                        <h2 class="subTitle">Fiche oiseau</h2>
                        <b>Nom courant:</b><br>
                        {{ bird.nomVern }}
                        <br /><br />
                        
                        <b>Nom scientifique (et "auteur") :</b><br/>
                        {{ bird.lbNom }} ({{ bird.lbAuteur }})
                        <br /><br />
                        
                        <b>Ordre :</b><br>
                        {{ bird.ordre }}
                        <br /><br />
                        
                        <b>Famille :</b><br>
                        {{ bird.famille }}
                        <br /><br />
                        
                        <b>Retrouvez des informations complètes sur :</b>
                        
                        {% if bird.nomVern == "" %}
                           
                            <div class="row">
                                <div class="col-sm-12">
                                    <a class="naoLink" href="https://fr.wikipedia.org/wiki/{{ bird.lbNom }}" target="_blank"><img src="{{ asset('img/wiki.png') }}" />&nbsp;&nbsp;&nbsp;&nbsp;{{ bird.lbNom }}</a>
                                </div>
                            </div><br>
                            
                            <div class="row">
                                <div class="col-sm-12">
                                    <a class="naoLink" href="https://inpn.mnhn.fr/espece/cd_nom/{{ bird.cdNom }}" target="_blank"><img src="{{ asset('img/INPN.png') }}" />&nbsp;&nbsp;&nbsp;&nbsp;{{ bird.lbNom }}</a>
                                </div>
                            </div>
                            
                        {% else %}
                           
                            <div class="row">
                                <div class="col-sm-12">
                                    <a class="naoLink" href="https://fr.wikipedia.org/wiki/{{ bird.nomVern }}" target="_blank"><img src="{{ asset('img/wiki.png') }}" />&nbsp;&nbsp;&nbsp;&nbsp;{{ bird.nomVern }}</a>
                                </div>
                            </div><br>

                            <div class="row">
                                <div class="col-sm-12">
                                    <a class="naoLink" href="https://inpn.mnhn.fr/espece/cd_nom/{{ bird.cdNom }}" target="_blank"><img src="{{ asset('img/INPN.png') }}" />&nbsp;&nbsp;&nbsp;&nbsp;{{ bird.nomVern }}</a>
                                </div>
                            </div>

                        {% endif %}
                    <br /><hr class="greenHr">
                    </div>
                    {% if observs or observsToValid %}
                        {% if observs %}
                            <div>
                                <h2 class="subTitle">Observations</h2>
                                {% for observ in observs %}
                                    {% if observ.validated == true %}
                                        <p>
                                            <a class="naoLink" href="{{ path('oc_platform_single_consult', { 'id': observ.id })}}">Le {{ observ.date|date('d/m/Y') }}</a>
                                        </p>
                                    {% endif %}
                                {% endfor %}
                            </div>
                        {% endif %}
                        <br /><hr class="greenHr">

                        {% if observsToValid and is_granted('ROLE_NATURALIST')%}
                            <div>
                                <h2 class="subTitle">En attente de validation</h2>
                                {% for observ in observsToValid %}
                                        <p>
                                            <a class="naoLink" href="{{ path('oc_platform_single_consult', { 'id': observ.id })}}">Le {{ observ.date|date('d/m/Y') }}</a>
                                        </p>
                                {% endfor %}
                            </div>
                        {% endif %}

                        {% if observsToValid and is_granted('ROLE_NATURALIST') == false %}
                            <div>
                                <h2 class="subTitle">En attente de validation</h2>
                                {% for observ in observsToValid %}
                                        <p>Le {{ observ.date|date('d/m/Y') }}</p>
                                {% endfor %}
                            </div>
                        {% endif %}
                    {% else %}
                        <div style="text-align: center;">
                            <h2 class="subTitle">Pas d'observation à ce jour</h2>
                        </div>
                    {% endif %}
                {% endif %}
            </div>
            <div class="col-lg-8 col-md-8 mapContainer">
                <div id="google-maps" class="google-maps">
                    <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d5661311.975415188!2d-2.4349789918864757!3d46.14452325106444!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0xd54a02933785731%3A0x6bfd3f96c747d9f7!2sFrance!5e0!3m2!1sfr!2sfr!4v1504695126093" width="800" height="800" frameborder="0" style="border:0" allowfullscreen></iframe>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script src="{{ asset('js/resizeChosen.js')}}" type="text/javascript"></script>
    <script src="{{ asset('chosen/chosen.jquery.min.js')}}" type="text/javascript"></script>
    <script src="{{ asset('chosen/docsupport/prism.js')}}" type="text/javascript" charset="utf-8"></script>
    <script src="{{ asset('chosen/docsupport/init.js')}}" type="text/javascript" charset="utf-8"></script>

    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyANcgno_3O4dB6m99zL-yT-mpD07g2TD30&callback=initMap"
            type="text/javascript"></script>

    {% if not is_granted('ROLE_NATURALIST') and observs is defined %}
        <script>
            function initMap() {
                {% for observ in observs %}
                    if ({{ loop.length }} > 1) {
                        var circlesTable = [
                            {% for observ in observs %}
                            { lat:{{ observ.latitude }} + 0.05, lng:{{ observ.longitude }} + 0.05 },
                            {% endfor %}
                        ];
                        var circlesZone = new google.maps.LatLngBounds();

                        var map = new google.maps.Map(document.getElementById("google-maps"));

                        var opt = { minZoom: 6, maxZoom: 9 };
                        map.setOptions(opt);

                        circlesTable.forEach(function(latlng){
                            var latit = latlng.lat,
                                longi = latlng.lng;
                            var center = new google.maps.LatLng(latit, longi);
                            var circleOptions = {
                                strokeColor: '#FF0000',
                                strokeOpacity: 0.5,
                                strokeWeight: 2,
                                fillColor: '#FF0000',
                                fillOpacity: 0.5,
                                map: map,
                                center: center,
                                radius: 5000
                            };
                            var circle = new google.maps.Circle(circleOptions);
                            circlesZone.extend(circle.getCenter());
                        })

                        map.fitBounds(circlesZone);

                    } else {

                        var latitude = {{ observ.latitude }};
                        var longitude = {{ observ.longitude }};
                        var center = {
                            lat: latitude + 0.05,
                            lng: longitude + 0.05
                        };

                        var mapOptions = {
                            center: center,
                            zoom: 9
                        };

                        var map = new google.maps.Map(document.getElementById('google-maps'), mapOptions);

                        var opt = { minZoom: 6, maxZoom: 9 };
                        map.setOptions(opt);

                        for (var observ in map) {
                            var observCircle = new google.maps.Circle({
                                strokeColor: '#FF0000',
                                strokeOpacity: 0.5,
                                strokeWeight: 2,
                                fillColor: '#FF0000',
                                fillOpacity: 0.01,
                                map: map,
                                center: center,
                                radius: 5000
                            });
                        }
                    }
                {% endfor %}
            }
        </script>
    {% elseif is_granted('ROLE_NATURALIST') and observs is defined %}
        {% set observs = observs|merge(observsToValid) %}
        <script>
            function initMap() {
                {% for observ in observs %}
                if ({{ loop.length }} > 1) {
                    var markersTable = [
                        {% for observ in observs %}
                        { lat:{{ observ.latitude }}, lng:{{ observ.longitude }} },
                        {% endfor %}
                    ];
                    var markersZone = new google.maps.LatLngBounds();

                    var mapDiv = new google.maps.Map( document.getElementById("google-maps"));

                    markersTable.forEach(function(latlng){
                        var latit = latlng.lat,
                            longi = latlng.lng;
                        var contentString = '<div id="content" class="text-center">'+
                            '<h1 id="firstHeading" class="firstHeading">{{ observ.taxref.nomVern }}</h1>'+
                            '<div id="bodyContent">'+
                            '<p><b>Observé(e) le {{ observ.date|date('d/m/Y') }}</b></p>'+
                            '<p>par {{ observ.user.firstName }} {{ observ.user.lastName }}.</p>'+
                            '<p><u>Coordonnées GPS</u> :</p>'+
                            '<p>Latitude {{ observ.latitude }} - Longitude {{ observ.longitude }}</p>'+
                            '</div>'+
                            '</div>';
                        var infowindow = new google.maps.InfoWindow({
                            content: contentString
                        });
                        var markerOptions = {
                            map: mapDiv,
                            position: new google.maps.LatLng(latit, longi)
                        };
                        var marker = new google.maps.Marker(markerOptions);
                        marker.addListener('click', function() {
                            infowindow.open(map, marker);
                        });
                        markersZone.extend(marker.getPosition());
                    })
                    mapDiv.fitBounds(markersZone);

                } else {

                    var latitude = {{ observ.latitude }};
                    var longitude = {{ observ.longitude }};
                    var center = {
                        lat: latitude,
                        lng: longitude
                    };

                    var mapOptions = {
                        center: center,
                        zoom: 10
                    };

                    var map = new google.maps.Map(document.getElementById('google-maps'), mapOptions);

                    var contentString = '<div id="content" class="text-center">'+
                        '<h1 id="firstHeading" class="firstHeading">{{ observ.taxref.nomVern }}</h1>'+
                        '<div id="bodyContent">'+
                        '<p><b>Observé(e) le {{ observ.date|date('d/m/Y') }}</b></p>'+
                        '<p>par {{ observ.user.firstName }} {{ observ.user.lastName }}.</p>'+
                        '<p><u>Coordonnées GPS</u> :</p>'+
                        '<p>Latitude {{ observ.latitude }} - Longitude {{ observ.longitude }}</p>'+
                        '</div>'+
                        '</div>';

                    var infowindow = new google.maps.InfoWindow({
                        content: contentString
                    });

                    var mark = [
                        {lat: latitude, lng: longitude}
                    ];

                    var latLng = new google.maps.LatLng(latitude, longitude);
                    var marker = new google.maps.Marker({
                        position: latLng,
                        map: map,
                        title: mark.title
                    });
                }
                {% endfor %}
            }
        </script>
    {% else %}
        <script>
            function initMap() {
                if(navigator.geolocation) {
                    function hasPosition(position) {
                        var point = new google.maps.LatLng(position.coords.latitude, position.coords.longitude),
                            myOptions = {
                                zoom: 12,
                                center: point,
                                mapTypeId: google.maps.MapTypeId.ROADMAP
                            },
                            mapDiv = document.getElementById("google-maps"),
                            map = new google.maps.Map(mapDiv, myOptions),
                            marker = new google.maps.Marker({
                                position: point,
                                map: map
                            });

                        google.maps.event.addListener(map, 'click', function(event) {
                            placeMarker(event.latLng);
                        });

                        var marker;
                        function placeMarker(location) {
                            if(marker){ //on vérifie si le marqueur existe
                                marker.setPosition(location); //on change sa position
                            }else{
                                marker = new google.maps.Marker({ //on créé le marqueur
                                    position: location,
                                    map: map
                                });
                            }
                            document.getElementById("oc_platformbundle_observation_latitude").value=location.lat();
                            document.getElementById("oc_platformbundle_observation_longitude").value=location.lng();
                        }
                    }
                    navigator.geolocation.getCurrentPosition(hasPosition);
                }
            }
        </script>
    {% endif %}

{% endblock %}
